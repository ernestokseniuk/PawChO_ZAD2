Opracować łańcuch (pipeline) w usłudzie GitHub Actions, który zbuduje obraz kontenera na
podstawie Dockerfile-a oraz kodów źródłowych aplikacji opracowanej jako rozwiązanie zadania nr 1
a następnie prześle go do publicznego repozytorium autora na Github (ghcr.io). Proces budowania
obrazu opisany w łańcuchu GHAction powinien dodatkowo spełniać następujące warunki:
a. Obraz wspierać ma dwie architektury: linux/arm64 oraz linux/amd64.
b. Wykorzystywane mają być (wysyłanie i pobieranie) dane cache (eksporter: registry oraz
backend-u registry w trybie max). Te dane cache powinny być przechowywane
w dedykowanym, publicznym repozytorium autora na DockerHub.
c. Ma być wykonany test CVE obrazu, który zapewni, że obraz zostanie przesłany do publicznego
repozytorium obrazów na GitHub tylko wtedy gdy nie będzie zawierał zagrożeń
sklasyfikowanych jako krytyczne lub wysokie.
W opisie rozwiązania należy krótko przedstawić przyjęty sposób tagowania obrazów i danych cache.
Uzasadnienie (z ewentualnym powołaniem się na źródła) tego wyboru będzie „nagrodzone”
dodatkowymi punktami.
UWAGA: Test CVE może zostać wykonany tak w oparciu o Docker Scout lub skaner Trivy. Proszę się
zastanowić, które z rozwiązań będzie najlepsze/najprostsze dla realizacji tego testu.
------------- SPRAWOZDANIE ----------------------------
Sprawozdanie należy zrealizować jako repozytorium na Github zawierające wszystkie niezbędne
kody źródłowe i pliki konfiguracyjne oraz plik README.md, w którym krótko będzie opisane jak
skonfigurowano / wykonano poszczególne etapy zadania. Dodatkowo, proszę aby opracowany
łańcuch GHAction został przynajmniej raz uruchomiony tak by potwierdzić poprawność jego
działania. 